namespace Homework_M7_6
{
    using System;
    using System.Collections.Generic;
    using System.Text;

    /// <summary>
    /// Holds the whole logic of the project.
    /// </summary>
    public class ArrayOperations
    {
        int[] array;
        List<int> output = new List<int>();

        /// <summary>
        /// Generates the array with random values.
        /// </summary>
        /// <param name="size">Size of the array.</param>
        public void GenerateArray(int size = 10)
        {
            array = new int[size];
            var rand = new Random();

            for (int i = 0; i < array.Length; i++)
            {
                array[i] = rand.Next(0, 101);
            }
        }

        /// <summary>
        /// Prints array.
        /// </summary>
        public void ShowArray()
        {
            for (int i = 0; i < array.Length; i++)
            {
                Console.Write("{0,4}", array[i]);
            }
        }

        /// <summary>
        /// Filters the input array.
        /// </summary>
        /// <param name="filterKey">Digit which must be present in the output array numbers.</param>
        /// /// <remarks>This is a wrapper for <see cref="DoFilterDigit(int)"/></remarks>
        public void FilterDigit(int filterKey)
        {
            DoFilterDigit(filterKey);
        }

        /// <summary>
        /// Filters the input array.
        /// </summary>
        /// <param name="inputArray">Input array of numbers.</param>
        /// <param name="filterKey">Digit which must be present in the output array numbers.</param>
        /// <returns>Output array of numbers, equals to <c>this.array</c></returns>
        /// <remarks>This is a wrapper for <see cref="DoFilterDigit(int)"/></remarks>
        public int[] FilterDigit(int[] inputArray, int filterKey)
        {
            array = inputArray;
            DoFilterDigit(filterKey);
            return this.array;
        }

        /// <summary>
        /// Filters the array (generated by <see cref="GenerateArray(int)"/>).
        /// </summary>
        /// <param name="key">The digit which specifies what numbers must be left after filtration.</param>
        private void DoFilterDigit(int key)
        {
            int numberOfDigits;
            int digit;
            int currentNumber;

            if ((key < 0) || (key > 9))
                throw new Exception("This is not a good key to filter on.");

            for (int i = 0; i < array.Length; i++)
            {
                numberOfDigits = (int)Math.Log10(array[i]) + 1;
                currentNumber = array[i];
                do
                {
                    digit = (int)(currentNumber / Math.Pow(10, numberOfDigits - 1));
                    if (digit == key)
                    {
                        break;
                    }

                    currentNumber = (int)(array[i] % Math.Pow(10, numberOfDigits - 1));
                    numberOfDigits--;
                }
                while (numberOfDigits > 0);

                if (numberOfDigits > 0)
                {
                    output.Add(array[i]);
                }
            }

            array = output.ToArray();
        }
    }
}
